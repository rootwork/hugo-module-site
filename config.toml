baseURL = 'http://localhost:1313/'
languageCode = 'en-us'
title = 'Hugo testing site'

# Any other usual Hugo config settings can go up here.

# Hugo module documentation: https://gohugo.io/hugo-modules/
# Also see the 'additional resources' section of this project's readme.
[module]

  # First we load a module to use as our theme. How does Hugo know it's a theme?
  # Hugo interprets it based on its contents. The comment you see next to the
  # path below is just to remind ourselves.
  [[module.imports]]
    # Paths are protocol-relative, meaning they should NOT start with http[s]://
    path = "github.com/rootwork/hugo-clarity" # Project theme

  # Next we load another module, but qualify it with `mounts` to only import
  # particular directories for specific Hugo uses.
  [[module.imports]]
      path = "github.com/chipzoller/hugo-clarity"
      # Setting `disabled` to `true` allows you to preserve the module cache and
      # settings without actually loading it into Hugo. The default is `false`.
      disabled = false

      [[module.imports.mounts]]
      # `source` sets a subdirectory of the import path.
      source = "exampleSite/content" # Project content
      # `target` places the contents of the source in a virtual directory at
      # this location. For instance, if you wanted all your content to have
      # paths prefixed by "blog", you would change `target` to "content/blog".
      target = "content"
      # Using the path prefixing noted above, you might be importing content
      # from multiple repos. The `lang` attribute lets you set a language code
      # when you're using this strategy on a multilingual site.
      lang = "en"
      # Exclude files matching a certain glob pattern. There is also an
      # alternate `includeFiles` option.
      excludeFiles = "**.pt.md"

      # Now we use a similar qualified module import to get our static assets.
      # We don't have to declare the path again because this is coming from the
      # same repo.
      [[module.imports.mounts]]
      source = "exampleSite/static" # Project static assets
      target = "static"

      # Unlike the first module we loaded, Hugo won't pull in anything else from
      # this module; it loads only at the mounts we specified.

  # Module mounts don't have to only come from imports; they can also be
  # local paths; in other words, you can use this in place of things like
  # `assetDir`. Uncomment the following and rebuild the site: You'll get a
  # largely unstyled page with a green background, as `my_assets/sass/main.sass`
  # will now be overriding the theme's Sass file.
  # [[module.mounts]]
  #   source = 'my_assets'
  #   target = 'assets'

  # Any mount locations that have not been overridden with another module (for
  # instance the `content` and `static` mounts from the second module) or with
  # local paths (for instance the `assets` mounts if the section above were
  # uncommented) will be loaded from the first specified module. `i18n`, for
  # instance, will be mounted at the `/i18n` path relative to the first module's
  # path at the top of this file. You can set mount points for all of Hugo's
  # base directories: content, static, layouts, data, assets, i18n, archetypes
  #
  # These are also listed here:
  # https://gohugo.io/hugo-modules/configuration/#module-config-mounts
